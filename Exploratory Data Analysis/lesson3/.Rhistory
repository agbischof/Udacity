install.packages('ggplot2', dependencies = TRUE)
library(ggplot2)
install.packages('RColorBrewer', dependencies = TRUE)
pf = read.csv('pseudo_facebook.tsv', sep = '\t')
getwd()
setwd('/Users/agibbs/code/Udacity/Exploratory Data Analysis/lesson3')
list.files()
pf = read.csv('pseudo_facebook.tsv', sep = '\t')
install.packages('ggplot2')
library(ggplot2)
names(pf)
qplot(x = dob_day, data=pf) +
scale_x_discrete(breaks=1:31)
qplot(x = dob_day, data=pf) +
scale_x_discrete(breaks=1:31) +
facet_wrap(~dob_month, ncol = 3)
names(pf)
qplot(x = friend_count, data=pf)
qplot(x = friend_count, data=pf, xlim = c(0,1000))
qplot(x = friend_count, data=pf, xlim = c(0,1000)) +
scale_x_continuous(limits = c(0,1000))
names(pf)
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender, ncol = 2)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender, ncol = 2)
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
p1 = qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample'))
p2 = p1 + scale_x_continuous(limits = c(5,1000))
p3 = p1+ scale_x_log10()
grid.arrange(p1,p2,p3, ncol = 1)
table(pf$gender)
by(pf$www_likes, pf$gender, summary)
grid.arrange(p1,p2,p3, ncol = 1)
p1 = qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample'))
library(gridExtra)
p1 = qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample'))
p2 = p1 + scale_x_continuous(limits = c(5,1000))
p3 = p1+ scale_x_log10()
grid.arrange(p1,p2,p3, ncol = 1)
table(pf$gender)
by(pf$www_likes, pf$gender, summary)
p2 = p1 + scale_x_continuous(limits = c(0,1000))
grid.arrange(p1,p2,p3, ncol = 1)
p2 = p1 + scale_x_continuous(limits = c(1,1000))
grid.arrange(p1,p2,p3, ncol = 1)
p2 = p1 + scale_x_continuous(limits = c(5,1000))
grid.arrange(p1,p2,p3, ncol = 1)
table(pf$gender)
by(pf$www_likes, pf$gender, summary)
table(pf$gender)
by(pf$gender, pf$www_likes, summary)
table(pf$gender)
by(pf$www_likes, pf$gender, summary)
p3 = p1+ scale_y_log10()
grid.arrange(p1,p2,p3, ncol = 1)
p3 = p1+ scale_y_log10(limits = c(0,15000))
grid.arrange(p1,p2,p3, ncol = 1)
p3 = p1+ scale_y_log10(limits = c(0,1500))
grid.arrange(p1,p2,p3, ncol = 1)
p1 = qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample'))
p2 = p1 + scale_x_continuous(limits = c(5,1000))
p3 = p1+ scale_y_log10(limits = c(0,1500))
grid.arrange(p1,p2,p3, ncol = 1)
p1 = qplot(x = www_likes+1, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample'))
p2 = p1 + scale_x_continuous(limits = c(5,1000))
p3 = p1+ scale_y_log10(limits = c(0,1500))
grid.arrange(p1,p2,p3, ncol = 1)
p3 = p1+ scale_y_log10(limits = c(0,1500))
p1+ scale_y_log10(limits = c(0,1500))
qplot(x = www_likes+1, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10(limits = c(0,1500))
qplot(x = www_likes+1, y = ..count+1../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10(limits = c(0,1500))
qplot(x = www_likes+1, y = ..count+1../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
qplot(x = www_likes+1, y = ..count+1../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample'))
qplot(x = www_likes+1, y = ..count+1../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender)
qplot(x = www_likes+1, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender)
qplot(x = www_likes+1, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10(limits = c(0,1500))
qplot(x = www_likes+1, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample'))
qplot(x = www_likes+1, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10(limits = c(0,1500))
qplot(x = www_likes+1, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10(limits = c(0,1000))
qplot(x = www_likes+1, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10(limits = c(0,100))
qplot(x = www_likes+1, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10(limits = c(5,100))
qplot(x = www_likes+1, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10(limits = c(5,1000))
qplot(x = www_likes+1, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10()
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10()
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10(limits = c(1,15000))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10(limits = c(1,1500))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10(limits = c(1,1000))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender,
xlab('Number of likes on the web'),
ylab('Number of users in the sample')) +
scale_y_log10(limits = c(2,1000))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab('Number of likes on the web'),
ylab('Number of users in the sample'),
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_y_log10(limits = c(2,1000))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab('Number of likes on the web'),
ylab('Number of users in the sample'),
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_y_log10()
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab('Number of likes on the web'),
ylab('Number of users in the sample'),
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_y_log10() +
scale_x_continuous(limits = c(1,15000))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab('Number of likes on the web'),
ylab('Number of users in the sample'),
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_y_log10() +
scale_x_continuous(limits = c(1,10000))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab('Number of likes on the web'),
ylab('Number of users in the sample'),
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_log10()
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab('Number of likes on the web'),
ylab('Number of users in the sample'),
geom = 'freqpoly', color = gender) +
scale_x_log10()
table(pf$gender)
by(pf$www_likes, pf$gender, summary)
rowsum(pf$www_likes, pf$gender)
?sum
?rowsum
rowsum(pf$www_likes, by=gender, sum)
rowsum(pf$www_likes, male, sum)
rowsum(pf$www_likes, pf$gener == male, sum)
View(pf)
View(pf)
rowsum(pf$www_likes, pf$gener)
rowsum(pf$www_likes, pf$gender)
?rowSum
?rowSums
?rowsum
rowsum
rowsum.matrix
rowsum(pf$www_likes, pf$gender)
?aggregate
rowsum(pf$www_likes, pf$gender, mean)
?aggreate
?aggregate
?tapply
tapply(pf$www_likes, pf$gender, sum)
tapply(pf$www_likes, pf$gender, var)
tapply(pf$www_likes, pf$gender, mean)
?system.time
system.time(rowsum(pf$www_likes, pf$gender))
system.time(tapply(pf$www_likes, pf$gender))
rowsum(pf$www_likes, pf$gender)
by(pf$www_likes, pf$gender, sum)
qplot(x = friend_count, data = subset(pf, !is.na(gender)),
binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
scale_y_continuous(limits = c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot'), ylim = c(0,1000)
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot', ylim = c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
scale_y_continuous(limits = c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot', ylim = c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(limits = c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0,1000))
p1 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot', ylim = c(0,1000))
p2 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
scale_y_continuous(limits = c(0,1000))
p3 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0,1000))
grid.arrange(p1, p2, p3, ncol=3)
p3
p3 + coord_cartesian(ylim = c(0,250))
tapply(pf$friend_count, pf$gender, summary)
tapply(pf$friend_count, pf$gender, sum)
names(pf)
geom = 'boxplot')
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
p1 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot', ylim = c(0,1000))
p2 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
scale_y_continuous(limits = c(0,1000))
p3 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0,1000))
p3 + coord_cartesian(ylim = c(0,250))
grid.arrange(p1, p2, p3, ncol=3)
p3 + coord_cartesian(ylim = c(0,250))
tapply(pf$friend_count, pf$gender, summary)
tapply(pf$friend_count, pf$gender, sum)
names(pf)
qplot(x = pf$gender, x=pf$friendships_initiated, geom = 'boxplot')
qplot(x = pf$gender, y=pf$friendships_initiated, geom = 'boxplot')
qplot(x = pf$gender, y=pf$friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = pf$gender, y=pf$friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
coord_cartesian(ylim = c(0,500))
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0,500))
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0,200))
tapply(pf$friendships_initiated, pf$gender, summary)
tapply(pf$friendships_initiated, pf$gender, sum)
table(pf$gender)
4584894/40254
FrIntSumGender = tapply(pf$friendships_initiated, pf$gender, sum)
TotalGendertable(pf$gender)
FrIntSumGender = tapply(pf$friendships_initiated, pf$gender, sum)
TotalGender = table(pf$gender)
FrIntSumGender/TotalGender
summary(pf$mobile_likes)
summary(pf$mobile_likes>0)
summary(pf$mobile_likes > 0)
mobile_check_in = NA
pf$mobile_check_in = ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in = factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
tapply(pf$mobile_likes, sum)
tapply(pf$mobile_check_in, sum)
checks = summary(pf$mobile_check_in)
perMobile = checks[1]/sum(checks)
perMobile
perMobile = checks[1]/sum(checks)*100
perMobile
63947/(63947+35056)
perMobile = checks[2]/sum(checks)*100
perMobile
sum(pf$mobile_check_in == 1)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)*100
